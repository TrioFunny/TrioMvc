<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fun.body.all.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.fun.body.all.model.Article">
    <id column="Id" jdbcType="VARCHAR" property="id" />
    <result column="userId" jdbcType="VARCHAR" property="userid" />
    <result column="projectId" jdbcType="VARCHAR" property="projectid" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fun.body.all.model.Article">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, userId, projectId, tags, title, introduction
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tr_article
    where Id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tr_article
    where Id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.fun.body.all.model.Article">
    insert into tr_article (Id, userId, projectId, 
      tags, title, introduction, 
      content)
    values (#{id,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{projectid,jdbcType=VARCHAR}, 
      #{tags,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fun.body.all.model.Article">
    insert into tr_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="projectid != null">
        projectId,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="projectid != null">
        #{projectid,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fun.body.all.model.Article">
    update tr_article
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="projectid != null">
        projectId = #{projectid,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fun.body.all.model.Article">
    update tr_article
    set userId = #{userid,jdbcType=VARCHAR},
      projectId = #{projectid,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where Id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fun.body.all.model.Article">
    update tr_article
    set userId = #{userid,jdbcType=VARCHAR},
      projectId = #{projectid,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>